"""
This type stub file was generated by pyright.
"""

import numpy as np

ford_2012_dates = np.asarray([20120103, 20120104, 20120105, 20120106, 20120109, 20120110, 20120111, 20120112, 20120113, 20120117, 20120118, 20120119, 20120120, 20120123, 20120124, 20120125, 20120126, 20120127, 20120130, 20120131, 20120201, 20120202, 20120203, 20120206, 20120207, 20120208, 20120209, 20120210, 20120213, 20120214, 20120215, 20120216, 20120217, 20120221, 20120222, 20120223, 20120224, 20120227, 20120228, 20120229, 20120301, 20120302, 20120305, 20120306, 20120307, 20120308, 20120309, 20120312, 20120313, 20120314, 20120315, 20120316, 20120319, 20120320, 20120321, 20120322, 20120323, 20120326, 20120327, 20120328, 20120329, 20120330, 20120402, 20120403, 20120404, 20120405, 20120409, 20120410, 20120411, 20120412, 20120413, 20120416, 20120417, 20120418, 20120419, 20120420, 20120423, 20120424, 20120425, 20120426, 20120427, 20120430, 20120501, 20120502, 20120503, 20120504, 20120507, 20120508, 20120509, 20120510, 20120511, 20120514, 20120515, 20120516, 20120517, 20120518, 20120521, 20120522, 20120523, 20120524, 20120525, 20120529, 20120530, 20120531, 20120601, 20120604, 20120605, 20120606, 20120607, 20120608, 20120611, 20120612, 20120613, 20120614, 20120615, 20120618, 20120619, 20120620, 20120621, 20120622, 20120625, 20120626, 20120627, 20120628, 20120629, 20120702, 20120703, 20120705, 20120706, 20120709, 20120710, 20120711, 20120712, 20120713, 20120716, 20120717, 20120718, 20120719, 20120720, 20120723, 20120724, 20120725, 20120726, 20120727, 20120730, 20120731, 20120801, 20120802, 20120803, 20120806, 20120807, 20120808, 20120809, 20120810, 20120813, 20120814, 20120815, 20120816, 20120817, 20120820, 20120821, 20120822, 20120823, 20120824, 20120827, 20120828, 20120829, 20120830, 20120831, 20120904, 20120905, 20120906, 20120907, 20120910, 20120911, 20120912, 20120913, 20120914, 20120917, 20120918, 20120919, 20120920, 20120921, 20120924, 20120925, 20120926, 20120927, 20120928, 20121001, 20121002, 20121003, 20121004, 20121005, 20121008, 20121009, 20121010, 20121011, 20121012, 20121015, 20121016, 20121017, 20121018, 20121019, 20121022, 20121023, 20121024, 20121025, 20121026, 20121031, 20121101, 20121102, 20121105, 20121106, 20121107, 20121108, 20121109, 20121112, 20121113, 20121114, 20121115, 20121116, 20121119, 20121120, 20121121, 20121123, 20121126, 20121127, 20121128, 20121129, 20121130, 20121203, 20121204, 20121205, 20121206, 20121207, 20121210, 20121211, 20121212, 20121213, 20121214, 20121217, 20121218, 20121219, 20121220, 20121221, 20121224, 20121226, 20121227, 20121228, 20121231])
ford_2012 = ...
series = np.array([91.5, 94.81, 94.38, 95.09, 93.78, 94.62, 92.53, 92.75, 90.31, 92.47, 96.12, 97.25, 98.5, 89.88, 91, 92.81, 89.16, 89.34, 91.62, 89.88, 88.38, 87.62, 84.78, 83, 83.5, 81.38, 84.44, 89.25, 86.38, 86.25, 85.25, 87.12, 85.81, 88.97, 88.47, 86.88, 86.81, 84.88, 84.19, 83.88, 83.38, 85.5, 89.19, 89.44, 91.09, 90.75, 91.44, 89, 91, 90.5, 89.03, 88.81, 84.28, 83.5, 82.69, 84.75, 85.66, 86.19, 88.94, 89.28, 88.62, 88.5, 91.97, 91.5, 93.25, 93.5, 93.16, 91.72, 90, 89.69, 88.88, 85.19, 83.38, 84.88, 85.94, 97.25, 99.88, 104.94, 106, 102.5, 102.41, 104.59, 106.12, 106, 106.06, 104.62, 108.62, 109.31, 110.5, 112.75, 123, 119.62, 118.75, 119.25, 117.94, 116.44, 115.19, 111.88, 110.59, 118.12, 116, 116, 112, 113.75, 112.94, 116, 120.5, 116.62, 117, 115.25, 114.31, 115.5, 115.87, 120.69, 120.19, 120.75, 124.75, 123.37, 122.94, 122.56, 123.12, 122.56, 124.62, 129.25, 131, 132.25, 131, 132.81, 134, 137.38, 137.81, 137.88, 137.25, 136.31, 136.25, 134.63, 128.25, 129, 123.87, 124.81, 123, 126.25, 128.38, 125.37, 125.69, 122.25, 119.37, 118.5, 123.19, 123.5, 122.19, 119.31, 123.31, 121.12, 123.37, 127.37, 128.5, 123.87, 122.94, 121.75, 124.44, 122, 122.37, 122.94, 124, 123.19, 124.56, 127.25, 125.87, 128.86, 132, 130.75, 134.75, 135, 132.38, 133.31, 131.94, 130, 125.37, 130.13, 127.12, 125.19, 122, 125, 123, 123.5, 120.06, 121, 117.75, 119.87, 122, 119.19, 116.37, 113.5, 114.25, 110, 105.06, 107, 107.87, 107, 107.12, 107, 91, 93.94, 93.87, 95.5, 93, 94.94, 98.25, 96.75, 94.81, 94.37, 91.56, 90.25, 93.94, 93.62, 97, 95, 95.87, 94.06, 94.62, 93.75, 98, 103.94, 107.87, 106.06, 104.5, 105, 104.19, 103.06, 103.42, 105.27, 111.87, 116, 116.62, 118.28, 113.37, 109, 109.7, 109.25, 107, 109.19, 110, 109.2, 110.12, 108, 108.62, 109.75, 109.81, 109, 108.75, 107.87])
def assert_np_arrays_equal(expected, got): # -> None:
  ...

def assert_np_arrays_not_equal(expected, got): # -> None:
  ''' Verifies expected and got have the same number of leading nan fields,
    followed by different floats.
    '''
  ...

